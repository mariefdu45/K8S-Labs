# Création d'un storage class
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: "sc-csivsphere"
  annotations:
    storageclass.kubernetes.io/is-default-class: "false"
provisioner: csi.vsphere.vmware.com
allowVolumeExpansion: true
reclaimPolicy: Delete
parameters:
  svStorageClass: "<nom de la VM Storage Policy sous jacente>"
---
# Création d'un namespace
apiVersion: v1
kind: Namespace
metadata:
  name: ns-prod
---
# Création d'un persistent volume claim
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: nginx-rwo-pvc
  namespace: ns-prod
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: sc-csivsphere
  resources:
    requests:
      storage: 2Gi
---
# Création d'un déploiement
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mondeploy
  namespace: ns-prod
spec:
  replicas: 3
  selector:
    matchLabels:
      app: frontend
      env: dev
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 0
  minReadySeconds: 2
  template:
    metadata:
      labels:
        app: frontend
        env: dev
    spec:
      containers:
      - name: monnginx
        image: nginx:1.19
        imagePullPolicy: Always
        volumeMounts:
        - mountPath: /usr/share/nginx/html
          name: mesdatas
      volumes:
      - name: mesdatas
        persistentVolumeClaim:
          claimName: nginx-rwo-pvc

