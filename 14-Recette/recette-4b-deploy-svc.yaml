apiVersion: apps/v1
kind: Deployment
metadata:
  name: serveursweb
  namespace: ns-prod
spec:
  replicas: 8
  selector:
    matchLabels:
      app: frontend
      env: dev
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 0
  minReadySeconds: 2
  template:
    metadata:
      labels:
        app: frontend
        env: dev
      annotations:
        kubernetes.io/change-cause: “Mise à jour à la derniere version”
    spec:
      volumes:
      - name: volume-frontend
        persistentVolumeClaim:
          claimName: static-pvc-nfs
      containers:
      - image: nginx
        name: container-frontend
        volumeMounts:
        - mountPath: /usr/share/nginx/html
          name: volume-frontend
        readinessProbe:
          tcpSocket:
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 1
        livenessProbe:
          tcpSocket:
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 1
      tolerations:
      - key: "node.kubernetes.io/unreachable"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 1
      - key: "node.kubernetes.io/not-ready"
        operator: "Exists"
        effect: "NoExecute"
---
apiVersion: v1
kind: Service
metadata:
  name: svc-frontend
  namespace: ns-prod
spec:
  type: LoadBalancer
  selector:
    app: frontend
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
